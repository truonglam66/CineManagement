/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LichChieu;

import Phim.Phim;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;
import static qlrap.util.ConnectionUtils.getJDBCConnection;

/**
 *
 * @author Hieu Vo
 */
public class QLLichChieuStep1 extends javax.swing.JFrame {

    LQLichChieuStep2 lichchieustep2;
    private String MaLC;

    /**
     * Creates new form QLLichChieuStep1
     */
    public QLLichChieuStep1() {
        initComponents();
        setCbx();
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        lichchieustep2 = new LQLichChieuStep2(null, null, null, null);
        showLC();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableLC = new javax.swing.JTable();
        btnXoa = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        btnCapnhat = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        JDCNgayLC = new com.toedter.calendar.JDateChooser();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        jSpinnerTGBD = new javax.swing.JSpinner(sm);
        jLabel4 = new javax.swing.JLabel();
        Date date1 = new Date();
        SpinnerDateModel sm1 =
        new SpinnerDateModel(date1, null, null, Calendar.HOUR_OF_DAY);
        jSpinnerTGKT = new javax.swing.JSpinner(sm1);
        jLabel3 = new javax.swing.JLabel();
        CbxTenP = new javax.swing.JComboBox<>();
        JbtnHuy = new javax.swing.JButton();
        JbtnTiepTuc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý ca chiếu");

        JTableLC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã ca chiếu", "Ngày chiếu", "Giờ bắt đầu", "Giờ kết thúc", "Tên phim", "Mã phòng chiếu"
            }
        ));
        jScrollPane1.setViewportView(JTableLC);

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnCapnhat.setText("Cập nhật");
        btnCapnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapnhatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnCapnhat)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTim))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapnhat)
                    .addComponent(btnXoa))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Liệt kê", jPanel1);

        jLabel2.setText("Chọn TG bắt đầu:");

        jLabel1.setText("Chọn Ngày :");

        jSpinnerTGBD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JSpinner.DateEditor de = new JSpinner.DateEditor(jSpinnerTGBD, "HH:mm:ss");
        jSpinnerTGBD.setEditor(de);
        jSpinnerTGBD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerTGBDStateChanged(evt);
            }
        });

        jLabel4.setText("Thời gian kết thúc :");

        jSpinnerTGKT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JSpinner.DateEditor de1 = new JSpinner.DateEditor(jSpinnerTGKT, "HH:mm:ss");
        jSpinnerTGKT.setEditor(de1);

        jLabel3.setText("Chọn Phim :");

        CbxTenP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbxTenP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxTenPActionPerformed(evt);
            }
        });

        JbtnHuy.setText("Hủy");

        JbtnTiepTuc.setText("Tiếp tục");
        JbtnTiepTuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnTiepTucActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(JbtnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(JbtnTiepTuc, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(193, 193, 193))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel3)))
                .addGap(54, 54, 54)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerTGKT, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CbxTenP, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerTGBD, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JDCNgayLC, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JDCNgayLC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerTGBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CbxTenP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerTGKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JbtnTiepTuc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JbtnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Chọn Thời gian và chọn phim", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JbtnTiepTucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnTiepTucActionPerformed
        // TODO add your handling code here:
        if (JDCNgayLC.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn ngày chiếu");
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(JDCNgayLC.getDate());

            try {

                Calendar cal = Calendar.getInstance();
                SimpleDateFormat sdf1 = new SimpleDateFormat("EEE MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
                cal.setTime(sdf1.parse(jSpinnerTGBD.getValue().toString()));

                Calendar cal1 = Calendar.getInstance();
                SimpleDateFormat sdf2 = new SimpleDateFormat("EEE MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
                cal1.setTime(sdf1.parse(jSpinnerTGKT.getValue().toString()));
                lichchieustep2.setNgayLc(JDCNgayLC.getDate());
                lichchieustep2.setTenP(CbxTenP.getSelectedItem().toString());
                SimpleDateFormat Hms = new SimpleDateFormat("HH:mm:ss");
                lichchieustep2.setTGBDC(Hms.format(cal.getTime()));
                lichchieustep2.setTGKTC(Hms.format(cal1.getTime()));
                lichchieustep2.setTenPhimChoLabel();
                lichchieustep2.setNgayLichC();
                lichchieustep2.setCbx(Hms.format(cal.getTime()), Hms.format(cal1.getTime()), JDCNgayLC.getDate());
                lichchieustep2.setMALC(MaLC);
                lichchieustep2.setVisible(true);
                setVisible(false);
                lichchieustep2.setLocationRelativeTo(null);

            } catch (ParseException ex) {
                Logger.getLogger(QLLichChieuStep1.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_JbtnTiepTucActionPerformed

    private void jSpinnerTGBDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerTGBDStateChanged
        // TODO add your handling code here:
        try {
            Calendar cal = Calendar.getInstance();
            SimpleDateFormat sdf = new SimpleDateFormat("EEE MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
            cal.setTime(sdf.parse(jSpinnerTGBD.getValue().toString()));
            int phut = getTL(CbxTenP.getSelectedItem().toString());
            cal.add(Calendar.MINUTE, phut);
            SimpleDateFormat Hms = new SimpleDateFormat("HH:mm:ss");
            jSpinnerTGKT.setValue(cal.getTime());
        } catch (ParseException ex) {
            Logger.getLogger(QLLichChieuStep1.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jSpinnerTGBDStateChanged

    private void CbxTenPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxTenPActionPerformed
        // TODO add your handling code here:

        try {

            if (CbxTenP.getSelectedItem() != null) {
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat sdf = new SimpleDateFormat("EEE MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
                cal.setTime(sdf.parse(jSpinnerTGBD.getValue().toString()));
                int phut = getTL(CbxTenP.getSelectedItem().toString());
                cal.add(Calendar.MINUTE, phut);
                SimpleDateFormat Hms = new SimpleDateFormat("HH:mm:ss");
                jSpinnerTGKT.setValue(cal.getTime());
            }

        } catch (ParseException ex) {
            Logger.getLogger(QLLichChieuStep1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_CbxTenPActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa hay không ?", "Xóa", JOptionPane.YES_NO_OPTION);
        if (x == JOptionPane.YES_OPTION) {
            try {

                Connection connection = getJDBCConnection();
                int row = JTableLC.getSelectedRow();
                String MACC = JTableLC.getModel().getValueAt(row, 0).toString();
                String sql = "Delete from CaChieu where MaCC=N'" + MACC + "'";
                PreparedStatement pst = connection.prepareStatement(sql);
                pst.executeUpdate();
                DefaultTableModel model = (DefaultTableModel) JTableLC.getModel();
                model.setRowCount(0);
                showLC();
                JOptionPane.showMessageDialog(null, "Xóa thành công");
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        int x = 0;
        ArrayList<LichChieu> list = LCList();
        for (int i = 0; i < list.size(); i++) {

            if (list.get(i).getMaLC().trim().toString().equals(txtTim.getText().trim())) {
                JTableLC.setRowSelectionInterval(i, i);
                x = 1;
            }
        }
        if (x == 0) {
            JOptionPane.showMessageDialog(null, "Không tìm thấy ");
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnCapnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapnhatActionPerformed
        // TODO add your handling code here:
        int row = JTableLC.getSelectedRow();
        MaLC = JTableLC.getModel().getValueAt(row, 0).toString();
        String ngayChieu = JTableLC.getModel().getValueAt(row, 1).toString();
        String gioBD = JTableLC.getModel().getValueAt(row, 2).toString();
        String gioKT = JTableLC.getModel().getValueAt(row, 3).toString();
        String TenPhim = JTableLC.getModel().getValueAt(row, 4).toString();
        String MaPC = JTableLC.getModel().getValueAt(row, 5).toString();

        try {
            Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(ngayChieu);
            JDCNgayLC.setDate(date1);
        } catch (ParseException ex) {
            Logger.getLogger(QLLichChieuStep1.class.getName()).log(Level.SEVERE, null, ex);
        }
        SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
        try {
            jSpinnerTGBD.setValue(format.parseObject(gioBD));
        } catch (ParseException ex) {
            Logger.getLogger(QLLichChieuStep1.class.getName()).log(Level.SEVERE, null, ex);
        }
        CbxTenP.setSelectedItem(TenPhim);

        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_btnCapnhatActionPerformed

        public ArrayList<Phim> getPhim() {
        ArrayList<Phim> ListP = new ArrayList();

        try {

            Connection connection = getJDBCConnection();

            String sql = "Select * from Phim";
            // show data
            PreparedStatement statement = connection.prepareCall(sql);
            ResultSet resultSet = statement.executeQuery();
            Phim p;

            while (resultSet.next()) {
                p = new Phim(resultSet.getString("MaPhim"), resultSet.getString("TenPhim"), resultSet.getInt("ThoiLuong"), resultSet.getString("DaoDien"), resultSet.getString("DienVien"), resultSet.getString("PhuDe"), resultSet.getDate("NgayCongChieu"), resultSet.getInt("DoTuoi"), resultSet.getString("TheLoai"));
                ListP.add(p);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        return ListP;
    }

    public void setCbx() {
        ArrayList<Phim> ListP = getPhim();
        DefaultComboBoxModel model = (DefaultComboBoxModel) CbxTenP.getModel();
        model.removeAllElements();
        Object[] TPhim = new Object[ListP.size()];
        for (int j = 0; j < ListP.size(); j++) {
            TPhim[j] = ListP.get(j).getTenP();
            model.addElement(TPhim[j]);
        }
        CbxTenP.setModel(model);

    }

    public int getTL(String TenP) {
        int a = 0;
        ArrayList<Phim> x = getPhim();
        for (int i = 0; i < x.size(); i++) {
            if (x.get(i).getTenP().toString().equals(TenP)) {
                a = x.get(i).getthoiLuong();
            }
        }
        return a;
    }

    public String getMap(String TenP) {
        String a = new String();
        ArrayList<Phim> x = getPhim();
        for (int i = 0; i < x.size(); i++) {
            if (x.get(i).getTenP().toString().equals(TenP)) {
                a = x.get(i).getMaP();
            }
        }
        return a;
    }

    public ArrayList<LichChieu> LCList() {
        ArrayList<LichChieu> LCList = new ArrayList();

        try {

            Connection connection = getJDBCConnection();

            String sql = "Select * from CaChieu c ,Phim p,Phongchieu PC where c.MAPhim=p.MAPHIM and c.MAPC=PC.MAPC";
            // show data
            PreparedStatement statement = connection.prepareCall(sql);
            ResultSet resultSet = statement.executeQuery();
            LichChieu p;
            while (resultSet.next()) {

                p = new LichChieu(resultSet.getString("MACC"), resultSet.getDate("NgayChieu"), resultSet.getTime("GioBd"), resultSet.getTime("GioKT"), resultSet.getString("TenPhim"), resultSet.getString("TenPC"));
                LCList.add(p);
            }
            // close connection
            connection.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return LCList;
    }

    //Show   phim  lên JTable
    public void showLC() {
        ArrayList<LichChieu> list = LCList();
        DefaultTableModel model = (DefaultTableModel) JTableLC.getModel();
        model.setRowCount(0);
        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaLC();
            row[1] = (list.get(i).getNgayChieu());
            row[2] = (list.get(i).getGioBD());
            row[3] = (list.get(i).getGioKT());
            row[4] = list.get(i).getMaP();
            row[5] = list.get(i).getMaPC();
            model.addRow(row);
        }

    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLLichChieuStep1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLLichChieuStep1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLLichChieuStep1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLLichChieuStep1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLLichChieuStep1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbxTenP;
    private com.toedter.calendar.JDateChooser JDCNgayLC;
    private javax.swing.JTable JTableLC;
    private javax.swing.JButton JbtnHuy;
    private javax.swing.JButton JbtnTiepTuc;
    private javax.swing.JButton btnCapnhat;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerTGBD;
    private javax.swing.JSpinner jSpinnerTGKT;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
